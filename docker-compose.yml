services:
  db:
    container_name: postgres
    image: postgres:14.1
    env_file:
      - .env
    environment:
      POSTGRES_DB: customer
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_started
    networks:
      - backend

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - "./localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - backend

  frontend:
    build:
      context: ./frontend/react
    container_name: react_frontend
    ports:
      - "3001:5173"
    depends_on:
      - backend
    env_file:
      - ./frontend/react/.env
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  db:
